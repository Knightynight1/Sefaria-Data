# TODO: Upload binary

---
substitutions: 
  _ENV_NAME: "deadbeef"
  _MONGO_HOSTNAME: "deadbeef"
  _GKE_NAMESPACE: "deadbeef"
  _SEFARIA_BUILD_ARTIFACT_REPO: "deadbeef"
  _PRODIGY_WHEEL_FILENAME: "deadbeef"
  _GKE_ZONE: "deadbeef"
  _GKE_CLUSTER_NAME: "deadbeef"

steps:
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: ['gsutil', 'cp', 'gs://${_SEFARIA_BUILD_ARTIFACT_REPO}/prodigy/${_PRODIGY_WHEEL_FILENAME}', './research/prodigy/${_PRODIGY_WHEEL_FILENAME}']
    id: retrieve_prodigy_binary

  - name: gcr.io/kaniko-project/executor:latest
    args:
      - --destination=gcr.io/$PROJECT_ID/prodigy-annotator:$BUILD_ID
      - --destination=gcr.io/$PROJECT_ID/prodigy-annotator:latest
      - --cache=true
      - --dockerfile=build/prodigy/Dockerfile
      - --context=dir://.
    id: build_prodigy_container
    wait_for: 
      - retrieve_prodigy_binary
  
  - name: "gcr.io/production-deployment/cloudbuild-helm:v3.1.2"
    id: deploy_prodigy
    args: ["upgrade", "-i", "annotator-${_ENV_NAME}", "./build/prodigy/annotator", "--namespace", "${GKE_NAMESPACE}", "--debug", "--set-string=deployEnv=${_ENV_NAME},prodigyAnnotator.imageName=gcr.io/$PROJECT_ID/prodigy-annotator,prodigyAnnotator.imageTag=$BUILD_ID,prodigyAnnotator.mongoHostname=${_MONGO_HOSTNAME}"]
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_GKE_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER_NAME}'
      - 'KUBECTL_VERSION=1.14'
      - 'KUBECONFIG=/root/.kube/config'
    wait_for:
      - build_prodigy_container
...
