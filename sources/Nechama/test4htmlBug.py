# -*- coding: utf-8 -*-
"""
Post a sheet form the local environment to a remote environment, using an API Key.
"""
import django
django.setup()
import urllib2
import requests
import regex as re
from sefaria.system.database import db
from sefaria.sheets import get_sheet
from sources.functions import post_sheet, http_request
from sources.local_settings import *

# GET_SERVER = "http://ravnataf.sandbox.sefaria.org"
GET_SERVER = "https://www.sefaria.org"

def find_bug(sheet_id, problems):
    sheet_id = sheet_id
    url = GET_SERVER + "/api/sheets/{}".format(sheet_id)
    got = http_request(url, body={"apikey": API_KEY}, method="GET")
    for s in got['sources']:
        if 'outsideBiText' in s.keys():
            if re.search(compiled, s['outsideBiText']['he']):
                problems.append(sheet_id)
                break
        elif 'outsideText' in s.keys():
            if re.search(compiled, s['outsideText']):
                problems.append(sheet_id)
                break

    print problems
    return problems

if __name__ == '__main__':
    problems = []
    compiled = re.compile(u'(</a><a)')

    sheets = [160441, 160442, 160443, 160444, 160445, 160446, 160447, 160448, 160449, 160450, 160451, 160452, 160453, 160454, 160455, 160456, 160457, 160458, 160459, 160460, 160461, 160462, 160463, 160464, 160465, 160466, 160467, 160468, 160469, 160470, 160471, 160472, 160473, 160474, 160475, 160476, 160477, 160478, 160479, 160480, 160481, 160482, 160483, 160484, 160485, 160486, 160487, 160488, 160489, 160490, 160491, 160492, 160493, 160494, 160495, 160496, 160497, 160498, 160499, 160500, 160501, 160502, 160503, 160504, 160505, 160506, 160507, 160508, 160509, 160510, 160511, 160512, 160513, 160514, 160515, 160516, 160517, 160518, 160519, 160520, 160521, 160522, 160523, 160524, 160525, 160526, 160527, 160528, 160529, 160530, 160531, 160532, 160533, 160534, 160535, 160536, 160537, 160538, 160539, 160540, 160542, 160543, 160544, 160545, 160546, 160547, 160548, 160549, 160550, 160551, 160552, 160553, 160554, 160555, 160556, 160557, 160558, 160559, 160560, 160561, 160562, 160563, 160564, 160565, 160566, 160567, 160568, 160569, 160570, 160571, 160572, 160573, 160574, 160575, 160576, 160577, 160578, 160579, 160580, 160581, 160582, 160583, 160584, 160585, 160586, 160587, 160588, 160589, 160590, 160591, 160592, 160593, 160594, 160595, 160596, 160597, 160598, 160599, 160600, 160601, 160602, 160603, 160604, 160605, 160606, 160607, 160608, 160609, 160610, 160611, 160612, 160613, 160614, 160615, 160616, 160617, 160618, 160619, 160620, 160621, 160622, 160623, 160624, 160625, 160626, 160627, 160628, 160629, 160630, 160631, 160632, 160633, 160634, 160635, 160636, 160637, 160638, 160639, 160640, 160641, 160642, 160643, 160644, 160645, 160646, 160647, 160648, 160649, 160650, 160651, 160652, 160653, 160654, 160655, 160656, 160657, 160658, 160659, 160660, 160661, 160662, 160663, 160664, 160665, 160666, 160667, 160668, 160669, 160670, 160671, 160672, 160673, 160674, 160675, 160676, 160677, 160678, 160679, 160680, 160681, 160682, 160683, 160684, 160685, 160686, 160687, 160688, 160689, 160690, 160691, 160692, 160693, 160694, 160695, 160696, 160697, 160698, 160699, 160700, 160701, 160702, 160703, 160704, 160705, 160706, 160707, 160708, 160709, 160710, 160711, 160712, 160713, 160714, 160715, 160716, 160717, 160718, 160719, 160720, 160721, 160722, 160723, 160724, 160725, 160726, 160727, 160728, 160729, 160730, 160731, 160732, 160733, 160734, 160735, 160736, 160737, 160738, 160739, 160740, 160741, 160746, 160747, 160748, 160749, 160750, 160751, 160752, 160753, 160754, 160755, 160756, 160757, 160758, 160759, 160760, 160761, 160762, 160763, 160764, 160765, 160766, 160767, 160768, 160769, 160770, 160771, 160772, 160773, 160774, 160775, 160776, 160777, 160778, 160779, 160785, 160786, 160787, 160788, 160789, 160790, 160791, 160792, 160793, 160794, 160795, 160796, 160797, 160798, 160799, 160800, 160801, 160802, 160803, 160804, 160805, 160817, 160818, 160819, 160820, 160822, 160823, 160824, 160825, 160826, 160827, 160828, 160829, 160830, 160831, 160832, 160833, 160834, 160835, 160836, 160837, 160838, 160839, 160840, 160841, 160842, 160843, 160844, 160845, 160846, 160847, 160848, 160849, 160850, 160851, 160852, 160853, 160854, 160855, 160856, 160857, 160858, 160859, 160860, 160861, 160862]

    for sheet in sheets:
        find_bug(sheet, problems)

    print problems